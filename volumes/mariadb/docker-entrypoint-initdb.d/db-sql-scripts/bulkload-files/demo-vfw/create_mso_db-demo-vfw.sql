SOURCE ../default/create_mso_db-default.sql

USE `mso_requests`;
DROP USER 'mso';
CREATE USER 'mso';
GRANT ALL on mso_requests.* to 'mso' identified by 'mso123' with GRANT OPTION;
FLUSH PRIVILEGES;

USE `mso_catalog`;
DROP USER 'catalog';
CREATE USER 'catalog';
GRANT ALL on mso_catalog.* to 'catalog' identified by 'catalog123' with GRANT OPTION;
FLUSH PRIVILEGES;

SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;

INSERT INTO `heat_environment` (`ARTIFACT_UUID`, `NAME`, `VERSION`, `DESCRIPTION`, `BODY`, `ARTIFACT_CHECKSUM`, `CREATION_TIMESTAMP`) VALUES ('EnvArtifact-UUID3','base_vfw.env','1.0','base_vfw ENV file','parameters:\n  vfw_image_name: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)\n  vfw_flavor_name: 4 GB General Purpose v1\n  public_net_id: 00000000-0000-0000-0000-000000000000\n  unprotected_private_net_id: zdfw1fwl01_unprotected\n  protected_private_net_id: zdfw1fwl01_protected\n  ecomp_private_net_id: oam_ecomp\n  unprotected_private_net_cidr: 192.168.10.0/24\n  protected_private_net_cidr: 192.168.20.0/24\n  ecomp_private_net_cidr: 192.168.9.0/24\n  vfw_private_ip_0: 192.168.10.100\n  vfw_private_ip_1: 192.168.20.100\n  vfw_private_ip_2: 192.168.9.100\n  vpg_private_ip_0: 192.168.10.200\n  vpg_private_ip_1: 192.168.9.200\n  vsn_private_ip_0: 192.168.20.250\n  vsn_private_ip_1: 192.168.9.250\n  vfw_name_0: zdfw1fwl01fwl01\n  vpg_name_0: zdfw1fwl01pgn01\n  vsn_name_0: zdfw1fwl01snk01\n  vnf_id: vFirewall_demo_app\n  vf_module_id: vFirewall\n  webserver_ip: 162.242.237.182\n  dcae_collector_ip: 192.168.9.1\n  key_name: vfw_key\n  pub_key: INSERT YOUR PUBLIC KEY HERE','MANUAL RECORD','2016-11-14 13:04:07');

INSERT INTO `heat_template` (`ARTIFACT_UUID`, `NAME`, `VERSION`, `DESCRIPTION`, `BODY`, `TIMEOUT_MINUTES`, `ARTIFACT_CHECKSUM`, `CREATION_TIMESTAMP`) VALUES ('Artifact-UUID3','base_vfw.yaml','1.0','Base VFW Heat','heat_template_version: 2013-05-23\n\ndescription: Heat template to deploy vFirewall demo app for OpenECOMP\n\nparameters:\n  vfw_image_name:\n    type: string\n    label: Image name or ID\n    description: Image to be used for compute instance\n  vfw_flavor_name:\n    type: string\n    label: Flavor\n    description: Type of instance (flavor) to be used\n  public_net_id:\n    type: string\n    label: Public network name or ID\n    description: Public network that enables remote connection to VNF\n  unprotected_private_net_id:\n    type: string\n    label: Unprotected private network name or ID\n    description: Private network that connects vPacketGenerator with vFirewall\n  protected_private_net_id:\n    type: string\n    label: Protected private network name or ID\n    description: Private network that connects vFirewall with vSink\n  ecomp_private_net_id:\n    type: string\n    label: ECOMP management network name or ID\n    description: Private network that connects ECOMP component and the VNF\n  unprotected_private_net_cidr:\n    type: string\n    label: Unprotected private network CIDR\n    description: The CIDR of the unprotected private network\n  protected_private_net_cidr:\n    type: string\n    label: Protected private network CIDR\n    description: The CIDR of the protected private network\n  ecomp_private_net_cidr:\n    type: string\n    label: ECOMP private network CIDR\n    description: The CIDR of the protected private network\n  vfw_private_ip_0:\n    type: string\n    label: vFirewall private IP address towards the unprotected network\n    description: Private IP address that is assigned to the vFirewall to communicate with the vPacketGenerator\n  vfw_private_ip_1:\n    type: string\n    label: vFirewall private IP address towards the protected network\n    description: Private IP address that is assigned to the vFirewall to communicate with the vSink\n  vfw_private_ip_2:\n    type: string\n    label: vFirewall private IP address towards the ECOMP management network\n    description: Private IP address that is assigned to the vFirewall to communicate with ECOMP components\n  vpg_private_ip_0:\n    type: string\n    label: vPacketGenerator private IP address towards the unprotected network\n    description: Private IP address that is assigned to the vPacketGenerator to communicate with the vFirewall\n  vpg_private_ip_1:\n    type: string\n    label: vPacketGenerator private IP address towards the ECOMP management network\n    description: Private IP address that is assigned to the vPacketGenerator to communicate with ECOMP components\n  vsn_private_ip_0:\n    type: string\n    label: vSink private IP address towards the protected network\n    description: Private IP address that is assigned to the vSink to communicate with the vFirewall\n  vsn_private_ip_1:\n    type: string\n    label: vSink private IP address towards the ECOMP management network\n    description: Private IP address that is assigned to the vSink to communicate with ECOMP components\n  vfw_name_0:\n    type: string\n    label: vFirewall name\n    description: Name of the vFirewall\n  vpg_name_0:\n    type: string\n    label: vPacketGenerator name\n    description: Name of the vPacketGenerator\n  vsn_name_0:\n    type: string\n    label: vSink name\n    description: Name of the vSink\n  vnf_id:\n    type: string\n    label: VNF ID\n    description: The VNF ID is provided by ECOMP\n  vf_module_id:\n    type: string\n    label: vFirewall module ID\n    description: The vFirewall Module ID is provided by ECOMP\n  webserver_ip:\n    type: string\n    label: Webserver IP address\n    description: IP address of the webserver that hosts the source code and binaries\n  dcae_collector_ip:\n    type: string\n    label: DCAE collector IP address\n    description: IP address of the DCAE collector\n  key_name:\n    type: string\n    label: Key pair name\n    description: Public/Private key pair name\n  pub_key:\n    type: string\n    label: Public key\n    description: Public key to be installed on the compute instance\n\nresources:\n  my_keypair:\n    type: OS::Nova::KeyPair\n    properties:\n      name: { get_param: key_name }\n      public_key: { get_param: pub_key }\n      save_private_key: false\n\n  unprotected_private_network:\n    type: OS::Neutron::Net\n    properties:\n      name: { get_param: unprotected_private_net_id }\n\n  protected_private_network:\n    type: OS::Neutron::Net\n    properties:\n      name: { get_param: protected_private_net_id }\n\n  unprotected_private_subnet:\n    type: OS::Neutron::Subnet\n    properties:\n      network_id: { get_resource: unprotected_private_network }\n      cidr: { get_param: unprotected_private_net_cidr }\n\n  protected_private_subnet:\n    type: OS::Neutron::Subnet\n    properties:\n      network_id: { get_resource: protected_private_network }\n      cidr: { get_param: protected_private_net_cidr }\n\n  vfw_0:\n    type: OS::Nova::Server\n    properties:\n      image: { get_param: vfw_image_name }\n      flavor: { get_param: vfw_flavor_name }\n      name: { get_param: vfw_name_0 }\n      key_name: { get_resource: my_keypair }\n      networks:\n        - network: { get_param: public_net_id }\n        - port: { get_resource: vfw_private_0_port }\n        - port: { get_resource: vfw_private_1_port }\n        - port: { get_resource: vfw_private_2_port }\n      metadata: {vnf_id: { get_param: vnf_id }, vf_module_id: { get_param: vf_module_id }}\n      user_data_format: RAW\n      user_data:\n        str_replace:\n          params:\n            __webserver__: { get_param: webserver_ip }\n            __dcae_collector_ip__ : { get_param: dcae_collector_ip }\n          template: |\n            #!/bin/bash\n\n            WEBSERVER_IP=__webserver__\n            DCAE_COLLECTOR_IP=__dcae_collector_ip__\n\n            mkdir /opt/config\n            cd /opt\n            wget http://$WEBSERVER_IP/demo_repo/v_firewall_init.sh\n            wget http://$WEBSERVER_IP/demo_repo/vfirewall.sh\n            chmod +x v_firewall_init.sh\n            chmod +x vfirewall.sh\n            echo $WEBSERVER_IP > config/webserver_ip.txt\n            echo $DCAE_COLLECTOR_IP > config/dcae_collector_ip.txt\n            echo \"no\" > config/install.txt\n            mv vfirewall.sh /etc/init.d\n            sudo update-rc.d vfirewall.sh defaults\n            ./v_firewall_init.sh\n\n  vfw_private_0_port:\n    type: OS::Neutron::Port\n    properties:\n      network: { get_resource: unprotected_private_network }\n      fixed_ips: [{\"subnet\": { get_resource: unprotected_private_subnet }, \"ip_address\": { get_param: vfw_private_ip_0 }}]\n\n  vfw_private_1_port:\n    type: OS::Neutron::Port\n    properties:\n      network: { get_resource: protected_private_network }\n      fixed_ips: [{\"subnet\": { get_resource: protected_private_subnet }, \"ip_address\": { get_param: vfw_private_ip_1 }}]\n\n  vfw_private_2_port:\n    type: OS::Neutron::Port\n    properties:\n      network: { get_param: ecomp_private_net_id }\n      fixed_ips: [{\"subnet\": { get_param: ecomp_private_net_id }, \"ip_address\": { get_param: vfw_private_ip_2 }}]\n\n  vpg_0:\n    type: OS::Nova::Server\n    properties:\n      image: { get_param: vfw_image_name }\n      flavor: { get_param: vfw_flavor_name }\n      name: { get_param: vpg_name_0 }\n      key_name: { get_resource: my_keypair }\n      networks:\n        - network: { get_param: public_net_id }\n        - port: { get_resource: vpg_private_0_port }\n        - port: { get_resource: vpg_private_1_port }\n      metadata: {vnf_id: { get_param: vnf_id }, vf_module_id: { get_param: vf_module_id }}\n      user_data_format: RAW\n      user_data:\n        str_replace:\n          params:\n            __webserver__: { get_param: webserver_ip }\n            __fw_ipaddr__: { get_param: vfw_private_ip_0 }\n            __protected_net_cidr__: { get_param: protected_private_net_cidr }\n            __sink_ipaddr__: { get_param: vsn_private_ip_0 }\n          template: |\n            #!/bin/bash\n\n            WEBSERVER_IP=__webserver__\n            FW_IPADDR=__fw_ipaddr__\n            PROTECTED_NET_CIDR=__protected_net_cidr__\n            SINK_IPADDR=__sink_ipaddr__\n\n            mkdir /opt/config\n            cd /opt\n            wget http://$WEBSERVER_IP/demo_repo/v_packetgen_init.sh\n            wget http://$WEBSERVER_IP/demo_repo/vpacketgen.sh\n            chmod +x v_packetgen_init.sh\n            chmod +x vpacketgen.sh\n            echo $WEBSERVER_IP > config/webserver_ip.txt\n            echo $FW_IPADDR > config/fw_ipaddr.txt\n            echo $PROTECTED_NET_CIDR > config/protected_net_cidr.txt\n            echo $SINK_IPADDR > config/sink_ipaddr.txt\n            echo \"no\" > config/install.txt\n            mv vpacketgen.sh /etc/init.d\n            sudo update-rc.d vpacketgen.sh defaults\n            ./v_packetgen_init.sh\n\n  vpg_private_0_port:\n    type: OS::Neutron::Port\n    properties:\n      network: { get_resource: unprotected_private_network }\n      fixed_ips: [{\"subnet\": { get_resource: unprotected_private_subnet }, \"ip_address\": { get_param: vpg_private_ip_0 }}]\n\n  vpg_private_1_port:\n    type: OS::Neutron::Port\n    properties:\n      network: { get_param: ecomp_private_net_id }\n      fixed_ips: [{\"subnet\": { get_param: ecomp_private_net_id }, \"ip_address\": { get_param: vpg_private_ip_1 }}]\n\n  vsn_0:\n    type: OS::Nova::Server\n    properties:\n      image: { get_param: vfw_image_name }\n      flavor: { get_param: vfw_flavor_name }\n      name: { get_param: vsn_name_0 }\n      key_name: { get_resource: my_keypair }\n      networks:\n        - network: { get_param: public_net_id }\n        - port: { get_resource: vsn_private_0_port }\n        - port: { get_resource: vsn_private_1_port }\n      metadata: {vnf_id: { get_param: vnf_id }, vf_module_id: { get_param: vf_module_id }}\n      user_data_format: RAW\n      user_data:\n        str_replace:\n          params:\n            __webserver__: { get_param: webserver_ip }\n            __protected_net_gw__: { get_param: vfw_private_ip_1 }\n            __unprotected_net__: { get_param: unprotected_private_net_cidr }\n          template: |\n            #!/bin/bash\n\n            WEBSERVER_IP=__webserver__\n            PROTECTED_NET_GW=__protected_net_gw__\n            UNPROTECTED_NET=__unprotected_net__\n            UNPROTECTED_NET=$(echo $UNPROTECTED_NET | cut -d\'/\' -f1)\n\n            mkdir /opt/config\n            cd /opt\n            wget http://$WEBSERVER_IP/demo_repo/v_sink_init.sh\n            wget http://$WEBSERVER_IP/demo_repo/vsink.sh\n            chmod +x v_sink_init.sh\n            chmod +x vsink.sh\n            echo $PROTECTED_NET_GW > config/protected_net_gw.txt\n            echo $UNPROTECTED_NET > config/unprotected_net.txt\n            echo \"no\" > config/install.txt\n            mv vsink.sh /etc/init.d\n            sudo update-rc.d vsink.sh defaults\n            ./v_sink_init.sh\n\n  vsn_private_0_port:\n    type: OS::Neutron::Port\n    properties:\n      network: { get_resource: protected_private_network }\n      fixed_ips: [{\"subnet\": { get_resource: protected_private_subnet }, \"ip_address\": { get_param: vsn_private_ip_0 }}]\n\n  vsn_private_1_port:\n    type: OS::Neutron::Port\n    properties:\n      network: { get_param: ecomp_private_net_id }\n      fixed_ips: [{\"subnet\": { get_param: ecomp_private_net_id }, \"ip_address\": { get_param: vsn_private_ip_1 }}]\n \n',300,'MANUAL RECORD','2016-11-14 13:04:07');

INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','dcae_collector_ip','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','ecomp_private_net_cidr','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','ecomp_private_net_id','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','key_name','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','protected_private_net_cidr','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','protected_private_net_id','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','public_net_id','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','pub_key','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','unprotected_private_net_cidr','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','unprotected_private_net_id','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vfw_flavor_name','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vfw_image_name','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vfw_name_0','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vfw_private_ip_0','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vfw_private_ip_1','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vfw_private_ip_2','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vf_module_id','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vnf_id','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vpg_name_0','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vpg_private_ip_0','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vpg_private_ip_1','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vsn_name_0','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vsn_private_ip_0','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','vsn_private_ip_1','','string',NULL);
INSERT INTO `heat_template_params` (`HEAT_TEMPLATE_ARTIFACT_UUID`, `PARAM_NAME`, `IS_REQUIRED`, `PARAM_TYPE`, `PARAM_ALIAS`) VALUES ('Artifact-UUID3','webserver_ip','','string',NULL);

INSERT INTO `service` (`MODEL_UUID`, `MODEL_NAME`, `MODEL_INVARIANT_UUID`, `MODEL_VERSION`, `DESCRIPTION`, `CREATION_TIMESTAMP`, `TOSCA_CSAR_ARTIFACT_UUID`) VALUES ('2e34774e-715e-4fd5-bd09-7b654622f35i','vfw-service','585822c7-4027-4f84-ba50-e9248606f112','1.0','VFW service','2016-11-14 13:04:07',NULL);

INSERT INTO `vf_module` (`MODEL_UUID`, `MODEL_INVARIANT_UUID`, `MODEL_VERSION`, `MODEL_NAME`, `DESCRIPTION`, `IS_BASE`, `HEAT_TEMPLATE_ARTIFACT_UUID`, `VOL_HEAT_TEMPLATE_ARTIFACT_UUID`, `CREATION_TIMESTAMP`, `VNF_RESOURCE_MODEL_UUID`) VALUES ('1e34774e-715e-4fd5-bd08-7b654622f33f.VF_RI1_VFW::module-1::module-1.group','585822c7-4027-4f84-ba50-e9248606f134','1.0','VF_RI1_VFW::module-1',NULL,1,'Artifact-UUID3',NULL,'2016-11-14 13:04:07','685822c7-4027-4f84-ba50-e9248606f132');

INSERT INTO `vf_module_customization` (`MODEL_CUSTOMIZATION_UUID`, `LABEL`, `INITIAL_COUNT`, `MIN_INSTANCES`, `MAX_INSTANCES`, `AVAILABILITY_ZONE_COUNT`, `HEAT_ENVIRONMENT_ARTIFACT_UUID`, `VOL_ENVIRONMENT_ARTIFACT_UUID`, `CREATION_TIMESTAMP`, `VF_MODULE_MODEL_UUID`) VALUES ('5aa23938-a9fe-11e7-8b4b-0242ac120002',NULL,1,0,NULL,NULL,'EnvArtifact-UUID3',NULL,'2017-10-05 18:52:03','1e34774e-715e-4fd5-bd08-7b654622f33f.VF_RI1_VFW::module-1::module-1.group');

INSERT INTO `vnf_res_custom_to_vf_module_custom` (`VNF_RESOURCE_CUST_MODEL_CUSTOMIZATION_UUID`, `VF_MODULE_CUST_MODEL_CUSTOMIZATION_UUID`, `CREATION_TIMESTAMP`) VALUES ('5a9bd247-a9fe-11e7-8b4b-0242ac120002','5aa23938-a9fe-11e7-8b4b-0242ac120002','2017-10-05 18:52:03');

INSERT INTO `vnf_resource` (`ORCHESTRATION_MODE`, `DESCRIPTION`, `CREATION_TIMESTAMP`, `MODEL_UUID`, `AIC_VERSION_MIN`, `AIC_VERSION_MAX`, `MODEL_INVARIANT_UUID`, `MODEL_VERSION`, `MODEL_NAME`, `TOSCA_NODE_TYPE`, `HEAT_TEMPLATE_ARTIFACT_UUID`) VALUES ('HEAT','VFW service1707MIGRATED','2016-11-14 13:04:07','685822c7-4027-4f84-ba50-e9248606f132',NULL,NULL,'585822c7-4027-4f84-ba50-e9248606f113','1.0','VFWResource',NULL,NULL);

INSERT INTO `vnf_resource_customization` (`MODEL_CUSTOMIZATION_UUID`, `MODEL_INSTANCE_NAME`, `MIN_INSTANCES`, `MAX_INSTANCES`, `AVAILABILITY_ZONE_MAX_COUNT`, `NF_TYPE`, `NF_ROLE`, `NF_FUNCTION`, `NF_NAMING_CODE`, `CREATION_TIMESTAMP`, `VNF_RESOURCE_MODEL_UUID`) VALUES ('5a9bd247-a9fe-11e7-8b4b-0242ac120002','VFWResource-1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2017-10-05 18:52:03','685822c7-4027-4f84-ba50-e9248606f132');


-------------------------------------------------
--- CLOUDIFY ADDS
-------------------------------------------------
delete from service_recipe;
delete from heat_environment;
delete from heat_template_params;
delete from heat_template;
delete from VNF_RES_CUSTOM_TO_VF_MODULE_CUSTOM;
delete from  VF_MODULE_CUSTOMIZATION;
delete from vf_module;
delete from VNF_RESOURCE_CUSTOMIZATION;
delete from vnf_resource;
delete from SERVICE_TO_RESOURCE_CUSTOMIZATIONS;
delete from service;

-- For VduPlugin
INSERT INTO SERVICE(MODEL_UUID, MODEL_NAME, MODEL_VERSION, DESCRIPTION, TOSCA_CSAR_ARTIFACT_UUID, CREATION_TIMESTAMP, MODEL_INVARIANT_UUID, SERVICE_TYPE, SERVICE_ROLE, ENVIRONMENT_CONTEXT, WORKLOAD_CONTEXT) VALUES ('3b50d3d0-cd00-4878-a42f-3912763181ba','CLOUDIFY_POC','7.0','Cloudify POC Service',NULL,'2017-02-03 17:13:43','7b0fafc1-83df-4590-9460-b5a8d9f9f277',NULL,NULL,NULL,NULL);

-- For VduPlugin
INSERT INTO SERVICE_TO_RESOURCE_CUSTOMIZATIONS(MODEL_TYPE, RESOURCE_MODEL_CUSTOMIZATION_UUID, CREATION_TIMESTAMP, SERVICE_MODEL_UUID) VALUES ('vnf','d1fd6760-529f-4cce-ac22-55f59a96067e','2017-10-16 12:00:00','3b50d3d0-cd00-4878-a42f-3912763181ba'), ('vnf','da86dd87-43c5-458c-b226-5315b7be9ad5','2017-05-26 15:08:25','3b50d3d0-cd00-4878-a42f-3912763181ba');

-- For VduPlugin
INSERT INTO VNF_RESOURCE(MODEL_UUID, MODEL_INVARIANT_UUID, MODEL_VERSION, MODEL_NAME, TOSCA_NODE_TYPE, DESCRIPTION, ORCHESTRATION_MODE, AIC_VERSION_MIN, AIC_VERSION_MAX, HEAT_TEMPLATE_ARTIFACT_UUID, CREATION_TIMESTAMP) VALUES('1669b580-f443-48fa-a163-f0aba3198f6f','7a106f01-c535-4c0b-9ebf-d568dbe62aa0','1.0','HeatTest',NULL,'Test VNF with modules for Heat','HEAT',NULL,NULL,NULL,'2017-10-16 12:00:00'), ('7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','6ea0b528-e303-4686-aa77-aa2fcbdccb96','2.0','CloudifyTest',NULL,'Test VNF with modules for Cloudify POC','CLOUDIFY',NULL,NULL,NULL,'2017-02-08 16:53:24');

-- For VduPlugin
INSERT INTO VNF_RESOURCE_CUSTOMIZATION(MODEL_CUSTOMIZATION_UUID, MODEL_INSTANCE_NAME, MIN_INSTANCES, MAX_INSTANCES, AVAILABILITY_ZONE_MAX_COUNT, NF_FUNCTION, NF_TYPE, NF_ROLE, NF_NAMING_CODE, MULTI_STAGE_DESIGN, VNF_RESOURCE_MODEL_UUID, CREATION_TIMESTAMP) VALUES('d1fd6760-529f-4cce-ac22-55f59a96067e','heat_test_vnf',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'1669b580-f443-48fa-a163-f0aba3198f6f','2017-10-16 12:00:00'),('da86dd87-43c5-458c-b226-5315b7be9ad5','cloudify_test_vnf',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','2017-05-26 15:08:24');

-- For VduPlugin
INSERT INTO VF_MODULE(MODEL_UUID, VNF_RESOURCE_MODEL_UUID, MODEL_INVARIANT_UUID, MODEL_VERSION, MODEL_NAME, DESCRIPTION, IS_BASE, HEAT_TEMPLATE_ARTIFACT_UUID, VOL_HEAT_TEMPLATE_ARTIFACT_UUID, CREATION_TIMESTAMP) VALUES('cba2ef2e-3cb4-459c-a433-03705b59dc9b','1669b580-f443-48fa-a163-f0aba3198f6f','f057d9f4-6009-4d62-8711-967da1100071','1','HeatTest..onap_vnf_base..module-0',NULL,1,'021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab',NULL,'2017-10-16 12:00:00'),('cba88123-3cb4-459c-a433-03705b59dc9b','1669b580-f443-48fa-a163-f0aba3198f6f','f05aa1b3-6009-4d62-8711-967da1100071','1','HeatTest..onap_vnf_addon..module-0',NULL,0,'02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab',NULL,'2017-10-16 12:00:00'),('ebc48e21-3e62-4c24-bcd6-961e98701a0a','7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','f5655432-ec71-4916-bf3b-93a654efcba4','1','CloudifyTest..onap_vnf_base..module-0',NULL,1,'e1588523-0087-4502-8779-0f3f94eef13c',NULL,'2017-02-08 16:53:24'),('ebc5a111-3e62-4c24-bcd6-961e98701a0a','7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','f56980a1-ec71-4916-bf3b-93a654efcba4','1','CloudifyTest..onap_vnf_addon..module-0',NULL,0,'e15ab762-0087-4502-8779-0f3f94eef13b',NULL,'2017-02-08 16:53:24');

-- For VduPlugin
INSERT INTO VF_MODULE_CUSTOMIZATION(MODEL_CUSTOMIZATION_UUID, VF_MODULE_MODEL_UUID, VOL_ENVIRONMENT_ARTIFACT_UUID, CREATION_TIMESTAMP, HEAT_ENVIRONMENT_ARTIFACT_UUID, MIN_INSTANCES, MAX_INSTANCES, INITIAL_COUNT, AVAILABILITY_ZONE_COUNT, LABEL) VALUES('17424b51-742e-40f5-b9c8-83918849a787','ebc48e21-3e62-4c24-bcd6-961e98701a0a',NULL,'2017-05-26 15:08:23','ff526790-2b31-4b0f-aa29-06d5e198cc42',1,1,1,NULL,'onap_vnf_base'),('17448001-742e-40f5-b9c8-83918849a787','ebc5a111-3e62-4c24-bcd6-961e98701a0a',NULL,'2017-05-26 15:08:23','ff530087-2b31-4b0f-aa29-06d5e198cc42',1,1,1,NULL,'onap_vnf_addon'),('1c747ccc-f243-4893-8cf4-47c5f52c445c','cba2ef2e-3cb4-459c-a433-03705b59dc9b',NULL,'2017-10-16 12:00:00','0b188fb6-d0e5-4599-ad87-fc4e3a246ddf',1,1,1,NULL,'heat_vnf_base'),('1c7901ae-f243-4893-8cf4-47c5f52c445c','cba88123-3cb4-459c-a433-03705b59dc9b',NULL,'2017-10-16 12:00:00','0b198ff1-d0e5-4599-ad87-fc4e3a246ddf',1,1,1,NULL,'heat_vnf_addon');

-- For VduPlugin
INSERT INTO VNF_RES_CUSTOM_TO_VF_MODULE_CUSTOM(VNF_RESOURCE_CUST_MODEL_CUSTOMIZATION_UUID, VF_MODULE_CUST_MODEL_CUSTOMIZATION_UUID, CREATION_TIMESTAMP) VALUES('d1fd6760-529f-4cce-ac22-55f59a96067e','1c747ccc-f243-4893-8cf4-47c5f52c445c','2017-10-16 12:00:00'),('da86dd87-43c5-458c-b226-5315b7be9ad5','1740536a-742e-40f5-b9c8-83918849a787','2017-05-26 15:08:24'),('da86dd87-43c5-458c-b226-5315b7be9ad5','17424b51-742e-40f5-b9c8-83918849a787','2017-05-26 15:08:24'),('da86dd87-43c5-458c-b226-5315b7be9ad5','17448001-742e-40f5-b9c8-83918849a787','2017-05-26 15:08:24');

-- For VduPlugin
INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab', 'heat_addon.yaml', '1', 'heat_template_version: 2015-04-30\n\ndescription:  Addon heat template for Heat/Cloudify test.  Creates one VM\n\nparameters:\n  image:\n    type: string\n    description: Openstack image name or id for the new server (from Env)\n  flavor:\n    type: string\n    description: Openstack flavor name or id for the new server (from Env)\n  vm_name:\n    type: string\n    description: Name for the new VM\n  network_name:\n    type: string\n    description: Openstack network name the new server will be connected to\n  secgroup_id:\n    type: string\n    description: Openstack security group ID (from Base)\n  keypair_name:\n    type: string\n    description: Openstack keypair Name (from Base)\n  \n\nresources:\n  vm:\n    type:  OS::Nova::Server\n    properties:\n      name:  {get_param:  vm_name}\n      image:  {get_param:  image}\n      flavor:  {get_param:  flavor}\n      networks:\n      - network: { get_param:  network_name }\n      security_groups: [ {get_param: secgroup_id} ]\n      key_name:  {get_param: keypair_name}\n', 3, 'HEAT addon template','2017-10-17 11:00:00','MANUAL_RECORD');
INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab', 'heat_base.yaml',  '1', 'heat_template_version: 2015-04-30\n\ndescription: Base Heat template for Heat/Cloudify test.  Describes a Security Group created using Heat\n\n\nparameters:\n  key_pair_name:\n    type: string\n    description: Keypair name for VMs\n\n  vnf_name:\n    type: string\n    description: VNF name\n\n\nresources:\n  security_group:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      description: Security Group for VMs\n      name:\n        str_replace:\n          template: VNF_NAME_secgroup\n          params:\n            VNF_NAME: { get_param: vnf_name }\n      rules:\n        - {\"remote_ip_prefix\": \"0.0.0.0/0\", \"protocol\": \"tcp\", \"port_range_min\": 80, \"port_range_max\": 80}\n        - {\"remote_ip_prefix\": \"0.0.0.0/0\", \"protocol\": \"tcp\", \"port_range_min\": 22, \"port_range_max\": 22}\n\n\noutputs:\n  secgroup_id:\n    description: ID of the security group for Add-on modules\n    value: {get_resource: security_group}\n\n  keypair_name:\n    description: ID of the keypair for add-on modules\n    value: {get_param: key_pair_name}', 1,'HEAT base template','2017-10-17 11:00:00','MANUAL_RECORD');
INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('e1588523-0087-4502-8779-0f3f94eef13c', 'onap_vnf_base.yaml','1', 'tosca_definitions_version: cloudify_dsl_1_3\n\ndescription: >\n  The blueprint describes an OpenStack vm created using Cloudify\n\nimports:\n  - https://cloudify.co/spec/cloudify/4.1m2/types.yaml\n  - plugin:cloudify-openstack-plugin?2.9.4001\n\ninputs:\n  openstack_config:\n    description: Openstack configuration structure\n  key_pair_name:\n    description: Openstack key pair name for the new server\n\nnode_templates:\n\n  security_group:\n    type: cloudify.openstack.nodes.SecurityGroup\n    properties:\n      openstack_config: { get_input: openstack_config }\n      rules:\n        - port: 80\n          remote_ip_prefix: 0.0.0.0/0\n        - port: 22\n          remote_ip_prefix: 0.0.0.0/0\n\n\n  keypair:\n    type: cloudify.openstack.nodes.KeyPair\n    properties:\n      openstack_config: { get_input: openstack_config }\n      use_external_resource: true\n      resource_id: { get_input: key_pair_name }\n      private_key_path: { concat: ["/etc/cloudify/", {get_input: key_pair_name}, ".pem"]}\n\noutputs:\n  secgroup_id:\n    description: ID of the security group for Add-on modules\n    value: {get_attribute: [security_group, external_id]}\n\n  keypair_id:\n    description: ID of the keypair for Add-on modules\n    value: {get_attribute: [keypair, external_id]}\n\n  keypair_name:\n    description: Name of the keypair for Add-on modules\n    value: {get_attribute: [keypair, external_name]}\n',3,'created from csar','2017-01-19 22:24:10','MANUAL RECORD');
--INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES
--('e15ab762-0087-4502-8779-0f3f94eef13b', 'onap_vnf_addon.yaml','1',STRINGDECODE('tosca_definitions_version: cloudify_dsl_1_3\n\ndescription: >\n  The blueprint describes an OpenStack vm created using Cloudify\n\nimports:\n  - http://www.getcloudify.org/spec/cloudify/4.1m2/types.yaml\n  - plugin:cloudify-openstack-plugin?2.9.4001\n\ninputs:\n  openstack_config:\n    description: Openstack configuration structure\n  image:\n    description: Openstack image name or id for the new server (from Env)\n  flavor:\n    description: Openstack flavor name or id for the new server (from Env)\n  vm_name:\n    description: Name for the new VM\n  network_name:\n    description: Openstack network name the new server will be connected to\n  secgroup_id:\n    description: Openstack security group ID (from Base)\n  keypair_id:\n    description: Openstack keypair  ID (from Base)\n  keypair_name:\n    description: Openstack keypair Name (from Base)\n\nnode_templates:\n\n  security_group:\n    type: cloudify.openstack.nodes.SecurityGroup\n    properties:\n      openstack_config: { get_input: openstack_config }\n      use_external_resource: true\n      resource_id: { get_input: secgroup_id }\n\n  keypair:\n    type: cloudify.openstack.nodes.KeyPair\n    properties:\n      openstack_config: { get_input: openstack_config }\n      use_external_resource: true\n      resource_id: { get_input: keypair_id }\n      private_key_path: { concat: [\'/etc/cloudify/\', {get_input: keypair_name}, ".pem"]}\n\n  vm:\n    type: cloudify.openstack.nodes.Server\n    properties:\n      openstack_config: { get_input: openstack_config }\n      image: { get_input: image }\n      flavor: { get_input: flavor }\n      management_network_name: { get_input: network_name }\n      agent_config:\n        install_method: none\n    relationships:\n      - type: cloudify.openstack.server_connected_to_security_group\n        target: security_group\n      - type: cloudify.openstack.server_connected_to_keypair\n        target: keypair\n    interfaces:\n      cloudify.interfaces.lifecycle:\n        create:\n          inputs:\n            args:\n              name: { get_input: vm_name }\n              # security_groups: [{ get_attribute: [ security_group, external_name ]}]\n              # Is security group needed again when in relationships?\n\n\n'),3,'created from csar','2017-09-28 19:30:00','MANUAL RECORD');

-- For VduPlugin
INSERT INTO HEAT_TEMPLATE_PARAMS(HEAT_TEMPLATE_ARTIFACT_UUID, PARAM_NAME, IS_REQUIRED, PARAM_TYPE, PARAM_ALIAS) VALUES('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','flavor','1','string',NULL),('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','image','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','keypair_name','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','network_name','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','secgroup_id','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','vm_name','1','string',NULL),
('021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab','key_pair_name','1','string',NULL), ('021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab','vnf_name','1','string',NULL), ('e1588523-0087-4502-8779-0f3f94eef13c','key_pair_name','1','string',NULL);
--('e15ab762-0087-4502-8779-0f3f94eef13b','flavor','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','image','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','keypair_id','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','keypair_name','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','network_name','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','secgroup_id','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','vm_name','1','string',NULL);

-- For VduPlugin
INSERT INTO HEAT_ENVIRONMENT(ARTIFACT_UUID, NAME, VERSION, DESCRIPTION, BODY, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('0b188fb6-d0e5-4599-ad87-fc4e3a246ddf','heat_base.env','1','Manually generated HEAT Environment','\nparameters:\n  vnf_name:  xyz','2017-10-16 11:00:00','MANUAL RECORD'), ('0b198ff1-d0e5-4599-ad87-fc4e3a246ddf','heat_addon.env','1','Manually generated HEAT Environment','\nparameters:\n  flavor: m1.small \n  image:  CentOS 7\n','2017-10-16 11:00:00','MANUAL RECORD'), ('ff526790-2b31-4b0f-aa29-06d5e198cc42','onap_vnf_base.env','1','Auto-generated HEAT Environment deployment artifact','\nparameters:\n','2017-02-03 17:14:18','YTg5MTYyYWRjZjlkOGJhZGQ2MjE4ZTk5OTJkNWFjMmQ='), ('ff530087-2b31-4b0f-aa29-06d5e198cc42','onap_vnf_addon.env','1','Auto-generated HEAT Environment deployment artifact','\nparameters:\n  flavor: m1.small \n  image:  CentOS 7\n  TEST_vnf_id: \n','2017-02-03 17:14:18','YTg5MTYyYWRjZjlkOGJhZGQ2MjE4ZTk5OTJkNWFjMmQ=');



-- For VduPlugin
INSERT INTO SERVICE(MODEL_UUID, MODEL_NAME, MODEL_VERSION, DESCRIPTION, TOSCA_CSAR_ARTIFACT_UUID, CREATION_TIMESTAMP, MODEL_INVARIANT_UUID, SERVICE_TYPE, SERVICE_ROLE, ENVIRONMENT_CONTEXT, WORKLOAD_CONTEXT) VALUES ('3b50d3d0-cd00-4878-a42f-3912763181ba','CLOUDIFY_POC','7.0','Cloudify POC Service',NULL,'2017-02-03 17:13:43','7b0fafc1-83df-4590-9460-b5a8d9f9f277',NULL,NULL,NULL,NULL);

-- For VduPlugin
INSERT INTO SERVICE_TO_RESOURCE_CUSTOMIZATIONS(MODEL_TYPE, RESOURCE_MODEL_CUSTOMIZATION_UUID, CREATION_TIMESTAMP, SERVICE_MODEL_UUID) VALUES ('vnf','d1fd6760-529f-4cce-ac22-55f59a96067e','2017-10-16 12:00:00','3b50d3d0-cd00-4878-a42f-3912763181ba'), ('vnf','da86dd87-43c5-458c-b226-5315b7be9ad5','2017-05-26 15:08:25','3b50d3d0-cd00-4878-a42f-3912763181ba');

-- For VduPlugin
INSERT INTO VNF_RESOURCE(MODEL_UUID, MODEL_INVARIANT_UUID, MODEL_VERSION, MODEL_NAME, TOSCA_NODE_TYPE, DESCRIPTION, ORCHESTRATION_MODE, AIC_VERSION_MIN, AIC_VERSION_MAX, HEAT_TEMPLATE_ARTIFACT_UUID, CREATION_TIMESTAMP) VALUES('1669b580-f443-48fa-a163-f0aba3198f6f','7a106f01-c535-4c0b-9ebf-d568dbe62aa0','1.0','HeatTest',NULL,'Test VNF with modules for Heat','HEAT',NULL,NULL,NULL,'2017-10-16 12:00:00'), ('7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','6ea0b528-e303-4686-aa77-aa2fcbdccb96','2.0','CloudifyTest',NULL,'Test VNF with modules for Cloudify POC','CLOUDIFY',NULL,NULL,NULL,'2017-02-08 16:53:24');

-- For VduPlugin
INSERT INTO VNF_RESOURCE_CUSTOMIZATION(MODEL_CUSTOMIZATION_UUID, MODEL_INSTANCE_NAME, MIN_INSTANCES, MAX_INSTANCES, AVAILABILITY_ZONE_MAX_COUNT, NF_FUNCTION, NF_TYPE, NF_ROLE, NF_NAMING_CODE, MULTI_STAGE_DESIGN, VNF_RESOURCE_MODEL_UUID, CREATION_TIMESTAMP) VALUES('d1fd6760-529f-4cce-ac22-55f59a96067e','heat_test_vnf',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'1669b580-f443-48fa-a163-f0aba3198f6f','2017-10-16 12:00:00'),('da86dd87-43c5-458c-b226-5315b7be9ad5','cloudify_test_vnf',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','2017-05-26 15:08:24');

-- For VduPlugin
INSERT INTO VF_MODULE(MODEL_UUID, VNF_RESOURCE_MODEL_UUID, MODEL_INVARIANT_UUID, MODEL_VERSION, MODEL_NAME, DESCRIPTION, IS_BASE, HEAT_TEMPLATE_ARTIFACT_UUID, VOL_HEAT_TEMPLATE_ARTIFACT_UUID, CREATION_TIMESTAMP) VALUES('cba2ef2e-3cb4-459c-a433-03705b59dc9b','1669b580-f443-48fa-a163-f0aba3198f6f','f057d9f4-6009-4d62-8711-967da1100071','1','HeatTest..onap_vnf_base..module-0',NULL,1,'021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab',NULL,'2017-10-16 12:00:00'),('cba88123-3cb4-459c-a433-03705b59dc9b','1669b580-f443-48fa-a163-f0aba3198f6f','f05aa1b3-6009-4d62-8711-967da1100071','1','HeatTest..onap_vnf_addon..module-0',NULL,0,'02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab',NULL,'2017-10-16 12:00:00'),('ebc48e21-3e62-4c24-bcd6-961e98701a0a','7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','f5655432-ec71-4916-bf3b-93a654efcba4','1','CloudifyTest..onap_vnf_base..module-0',NULL,1,'e1588523-0087-4502-8779-0f3f94eef13c',NULL,'2017-02-08 16:53:24'),('ebc5a111-3e62-4c24-bcd6-961e98701a0a','7097d8bb-f6ad-4cf7-866e-6a04c8f1b332','f56980a1-ec71-4916-bf3b-93a654efcba4','1','CloudifyTest..onap_vnf_addon..module-0',NULL,0,'e15ab762-0087-4502-8779-0f3f94eef13b',NULL,'2017-02-08 16:53:24');

-- For VduPlugin
INSERT INTO VF_MODULE_CUSTOMIZATION(MODEL_CUSTOMIZATION_UUID, VF_MODULE_MODEL_UUID, VOL_ENVIRONMENT_ARTIFACT_UUID, CREATION_TIMESTAMP, HEAT_ENVIRONMENT_ARTIFACT_UUID, MIN_INSTANCES, MAX_INSTANCES, INITIAL_COUNT, AVAILABILITY_ZONE_COUNT, LABEL) VALUES('17424b51-742e-40f5-b9c8-83918849a787','ebc48e21-3e62-4c24-bcd6-961e98701a0a',NULL,'2017-05-26 15:08:23','ff526790-2b31-4b0f-aa29-06d5e198cc42',1,1,1,NULL,'onap_vnf_base'),('17448001-742e-40f5-b9c8-83918849a787','ebc5a111-3e62-4c24-bcd6-961e98701a0a',NULL,'2017-05-26 15:08:23','ff530087-2b31-4b0f-aa29-06d5e198cc42',1,1,1,NULL,'onap_vnf_addon'),('1c747ccc-f243-4893-8cf4-47c5f52c445c','cba2ef2e-3cb4-459c-a433-03705b59dc9b',NULL,'2017-10-16 12:00:00','0b188fb6-d0e5-4599-ad87-fc4e3a246ddf',1,1,1,NULL,'heat_vnf_base'),('1c7901ae-f243-4893-8cf4-47c5f52c445c','cba88123-3cb4-459c-a433-03705b59dc9b',NULL,'2017-10-16 12:00:00','0b198ff1-d0e5-4599-ad87-fc4e3a246ddf',1,1,1,NULL,'heat_vnf_addon');

-- For VduPlugin
INSERT INTO VNF_RES_CUSTOM_TO_VF_MODULE_CUSTOM(VNF_RESOURCE_CUST_MODEL_CUSTOMIZATION_UUID, VF_MODULE_CUST_MODEL_CUSTOMIZATION_UUID, CREATION_TIMESTAMP) VALUES('d1fd6760-529f-4cce-ac22-55f59a96067e','1c747ccc-f243-4893-8cf4-47c5f52c445c','2017-10-16 12:00:00'),('da86dd87-43c5-458c-b226-5315b7be9ad5','1740536a-742e-40f5-b9c8-83918849a787','2017-05-26 15:08:24'),('da86dd87-43c5-458c-b226-5315b7be9ad5','17424b51-742e-40f5-b9c8-83918849a787','2017-05-26 15:08:24'),('da86dd87-43c5-458c-b226-5315b7be9ad5','17448001-742e-40f5-b9c8-83918849a787','2017-05-26 15:08:24');

-- For VduPlugin
INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab', 'heat_addon.yaml', '1', 'heat_template_version: 2015-04-30\n\ndescription:  Addon heat template for Heat/Cloudify test.  Creates one VM\n\nparameters:\n  image:\n    type: string\n    description: Openstack image name or id for the new server (from Env)\n  flavor:\n    type: string\n    description: Openstack flavor name or id for the new server (from Env)\n  vm_name:\n    type: string\n    description: Name for the new VM\n  network_name:\n    type: string\n    description: Openstack network name the new server will be connected to\n  secgroup_id:\n    type: string\n    description: Openstack security group ID (from Base)\n  keypair_name:\n    type: string\n    description: Openstack keypair Name (from Base)\n  \n\nresources:\n  vm:\n    type:  OS::Nova::Server\n    properties:\n      name:  {get_param:  vm_name}\n      image:  {get_param:  image}\n      flavor:  {get_param:  flavor}\n      networks:\n      - network: { get_param:  network_name }\n      security_groups: [ {get_param: secgroup_id} ]\n      key_name:  {get_param: keypair_name}\n', 3, 'HEAT addon template','2017-10-17 11:00:00','MANUAL_RECORD');
INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab', 'heat_base.yaml',  '1', 'heat_template_version: 2015-04-30\n\ndescription: Base Heat template for Heat/Cloudify test.  Describes a Security Group created using Heat\n\n\nparameters:\n  key_pair_name:\n    type: string\n    description: Keypair name for VMs\n\n  vnf_name:\n    type: string\n    description: VNF name\n\n\nresources:\n  security_group:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      description: Security Group for VMs\n      name:\n        str_replace:\n          template: VNF_NAME_secgroup\n          params:\n            VNF_NAME: { get_param: vnf_name }\n      rules:\n        - {\"remote_ip_prefix\": \"0.0.0.0/0\", \"protocol\": \"tcp\", \"port_range_min\": 80, \"port_range_max\": 80}\n        - {\"remote_ip_prefix\": \"0.0.0.0/0\", \"protocol\": \"tcp\", \"port_range_min\": 22, \"port_range_max\": 22}\n\n\noutputs:\n  secgroup_id:\n    description: ID of the security group for Add-on modules\n    value: {get_resource: security_group}\n\n  keypair_name:\n    description: ID of the keypair for add-on modules\n    value: {get_param: key_pair_name}', 1,'HEAT base template','2017-10-17 11:00:00','MANUAL_RECORD');
INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('e1588523-0087-4502-8779-0f3f94eef13c', 'onap_vnf_base.yaml','1', 'tosca_definitions_version: cloudify_dsl_1_3\n\ndescription: >\n  The blueprint describes an OpenStack vm created using Cloudify\n\nimports:\n  - https://cloudify.co/spec/cloudify/4.1m2/types.yaml\n  - plugin:cloudify-openstack-plugin?2.9.4001\n\ninputs:\n  openstack_config:\n    description: Openstack configuration structure\n  key_pair_name:\n    description: Openstack key pair name for the new server\n\nnode_templates:\n\n  security_group:\n    type: cloudify.openstack.nodes.SecurityGroup\n    properties:\n      openstack_config: { get_input: openstack_config }\n      rules:\n        - port: 80\n          remote_ip_prefix: 0.0.0.0/0\n        - port: 22\n          remote_ip_prefix: 0.0.0.0/0\n\n\n  keypair:\n    type: cloudify.openstack.nodes.KeyPair\n    properties:\n      openstack_config: { get_input: openstack_config }\n      use_external_resource: true\n      resource_id: { get_input: key_pair_name }\n      private_key_path: { concat: ["/etc/cloudify/", {get_input: key_pair_name}, ".pem"]}\n\noutputs:\n  secgroup_id:\n    description: ID of the security group for Add-on modules\n    value: {get_attribute: [security_group, external_id]}\n\n  keypair_id:\n    description: ID of the keypair for Add-on modules\n    value: {get_attribute: [keypair, external_id]}\n\n  keypair_name:\n    description: Name of the keypair for Add-on modules\n    value: {get_attribute: [keypair, external_name]}\n',3,'created from csar','2017-01-19 22:24:10','MANUAL RECORD');
--INSERT INTO HEAT_TEMPLATE(ARTIFACT_UUID, NAME, VERSION, BODY, TIMEOUT_MINUTES, DESCRIPTION, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES
--('e15ab762-0087-4502-8779-0f3f94eef13b', 'onap_vnf_addon.yaml','1',STRINGDECODE('tosca_definitions_version: cloudify_dsl_1_3\n\ndescription: >\n  The blueprint describes an OpenStack vm created using Cloudify\n\nimports:\n  - http://www.getcloudify.org/spec/cloudify/4.1m2/types.yaml\n  - plugin:cloudify-openstack-plugin?2.9.4001\n\ninputs:\n  openstack_config:\n    description: Openstack configuration structure\n  image:\n    description: Openstack image name or id for the new server (from Env)\n  flavor:\n    description: Openstack flavor name or id for the new server (from Env)\n  vm_name:\n    description: Name for the new VM\n  network_name:\n    description: Openstack network name the new server will be connected to\n  secgroup_id:\n    description: Openstack security group ID (from Base)\n  keypair_id:\n    description: Openstack keypair  ID (from Base)\n  keypair_name:\n    description: Openstack keypair Name (from Base)\n\nnode_templates:\n\n  security_group:\n    type: cloudify.openstack.nodes.SecurityGroup\n    properties:\n      openstack_config: { get_input: openstack_config }\n      use_external_resource: true\n      resource_id: { get_input: secgroup_id }\n\n  keypair:\n    type: cloudify.openstack.nodes.KeyPair\n    properties:\n      openstack_config: { get_input: openstack_config }\n      use_external_resource: true\n      resource_id: { get_input: keypair_id }\n      private_key_path: { concat: [\'/etc/cloudify/\', {get_input: keypair_name}, ".pem"]}\n\n  vm:\n    type: cloudify.openstack.nodes.Server\n    properties:\n      openstack_config: { get_input: openstack_config }\n      image: { get_input: image }\n      flavor: { get_input: flavor }\n      management_network_name: { get_input: network_name }\n      agent_config:\n        install_method: none\n    relationships:\n      - type: cloudify.openstack.server_connected_to_security_group\n        target: security_group\n      - type: cloudify.openstack.server_connected_to_keypair\n        target: keypair\n    interfaces:\n      cloudify.interfaces.lifecycle:\n        create:\n          inputs:\n            args:\n              name: { get_input: vm_name }\n              # security_groups: [{ get_attribute: [ security_group, external_name ]}]\n              # Is security group needed again when in relationships?\n\n\n'),3,'created from csar','2017-09-28 19:30:00','MANUAL RECORD');

-- For VduPlugin
INSERT INTO HEAT_TEMPLATE_PARAMS(HEAT_TEMPLATE_ARTIFACT_UUID, PARAM_NAME, IS_REQUIRED, PARAM_TYPE, PARAM_ALIAS) VALUES('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','flavor','1','string',NULL),('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','image','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','keypair_name','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','network_name','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','secgroup_id','1','string',NULL), ('02188ab2-7cbb-4c55-bcd9-49a4dc9eb2ab','vm_name','1','string',NULL),
('021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab','key_pair_name','1','string',NULL), ('021c2d81-7cbb-4c55-bcd9-49a4dc9eb2ab','vnf_name','1','string',NULL), ('e1588523-0087-4502-8779-0f3f94eef13c','key_pair_name','1','string',NULL);
--('e15ab762-0087-4502-8779-0f3f94eef13b','flavor','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','image','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','keypair_id','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','keypair_name','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','network_name','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','secgroup_id','1','string',NULL),
--('e15ab762-0087-4502-8779-0f3f94eef13b','vm_name','1','string',NULL);

-- For VduPlugin
INSERT INTO HEAT_ENVIRONMENT(ARTIFACT_UUID, NAME, VERSION, DESCRIPTION, BODY, CREATION_TIMESTAMP, ARTIFACT_CHECKSUM) VALUES('0b188fb6-d0e5-4599-ad87-fc4e3a246ddf','heat_base.env','1','Manually generated HEAT Environment','\nparameters:\n  vnf_name:  xyz','2017-10-16 11:00:00','MANUAL RECORD'), ('0b198ff1-d0e5-4599-ad87-fc4e3a246ddf','heat_addon.env','1','Manually generated HEAT Environment','\nparameters:\n  flavor: m1.small \n  image:  CentOS 7\n','2017-10-16 11:00:00','MANUAL RECORD'), ('ff526790-2b31-4b0f-aa29-06d5e198cc42','onap_vnf_base.env','1','Auto-generated HEAT Environment deployment artifact','\nparameters:\n','2017-02-03 17:14:18','YTg5MTYyYWRjZjlkOGJhZGQ2MjE4ZTk5OTJkNWFjMmQ='), ('ff530087-2b31-4b0f-aa29-06d5e198cc42','onap_vnf_addon.env','1','Auto-generated HEAT Environment deployment artifact','\nparameters:\n  flavor: m1.small \n  image:  CentOS 7\n  TEST_vnf_id: \n','2017-02-03 17:14:18','YTg5MTYyYWRjZjlkOGJhZGQ2MjE4ZTk5OTJkNWFjMmQ=');





SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
